library(shiny); runApp('R/shiny_map.R')
devtools::install_github("quartermaine/lab5")
library(lab5)
runApp('R/shiny_map.R')
library(lab)
library(lab5)
library(lab5)
devtools::install_github("fengye0907/LAB5C")
library(LAB5C)
library("LAB5C", lib.loc="~/R/win-library/3.5")
remove.packages("LAB5C", lib="~/R/win-library/3.5")
remove.packages("lab5", lib="~/R/win-library/3.5")
devtools::install_github("quartermaine/lab5")
geocode_func <- setRefClass("geocode_func",
fields = list(
f="data.frame"
),
methods = list(
initialize = function(){
cat("User::initialize")
f<<- data.frame()
},
getCoordinates = function(data){
if (is.character(data)){
data <- as.data.frame(data)
}
if(data=="" | grepl("[][!#$%()*.:;<=>@^_`|~.{}]", data[,1])==TRUE){
stop("Please check again your input")
}
a<-vector("character")
b<-vector("numeric")
d<-vector("numeric")
for(i in 1:nrow(data)){
print("Processing")
url<- "http://www.datasciencetoolkit.org/maps/api/geocode/json"
json <-rjson::fromJSON(httr::content(httr::GET(url,query=list(sensor="FALSE",address=as.character(data[i,1]))),type="text"))
if (json$status=="OK"){
loc <- json$results[[1]]$geometry$location
a[i]<-as.character(data[i,1])
b[i]<-loc$lng
d[i]<-loc$lat
}else{
a[i]<-as.character(data[i,1])
b[i]<-NA
d[i]<-NA
}
}
f<<-data.frame(a,b,d)
names(f) <<- c("Address","Longtitude","Latitude")
return(f)
}
)
)
library(lab5)
load("~/Advance_R_Programming/lab5/data/dff.Rdata")
load("~/Advance_R_Programming/lab5/data/dff.Rdata")
library(lab5)
library(lab5)
library(lab5)
m
save(m,"m.RData")
save(m,file="m.RData")
library(lab5)
library(lab5)
